/* BASIC PAGE STYLING */

html {
  font-family: "Lato", sans-serif;
  font-size: 16px;
  cursor: default;

  /*
  Using Base16 Tomorrow Night colors:
  https://github.com/chriskempson/base16-tomorrow-scheme/blob/master/tomorrow-night.yaml
  */
  --base-00: #1d1f21;
  --base-01: #282a2e;
  --base-02: #373b41;
  --base-03: #969896;
  --base-04: #b4b7b4;
  --base-05: #c5c8c6;
  --base-06: #e0e0e0;
  --base-07: #ffffff;
  --base-08: #cc6666;
  --base-09: #de935f;
  --base-0a: #f0c674;
  --base-0b: #b5bd68;
  --base-0c: #8abeb7;
  --base-0d: #81a2be;
  --base-0e: #b294bb;
  --base-0f: #a3685a;
  --base-0102: #303338;
  --base-0203: #676a6c;
  --base-00-semitransparent: #1d1f2199;

  --transition-time: 0.15s;
  --radius: 0.25em;
  --shadow: 0.03em 0.125em 0.3em 0.03em var(--base-00);
}

@media (max-width: 1400px) {
  html {
    font-size: 14px;
  }
}

/* Force 16px font on iOS devices. Otherwise they will zoom in when a `select` is activated. */
@supports (-webkit-overflow-scrolling: touch) {
  html {
    font-size: 16px;
  }
}

body {
  width: 100vw;
  height: 100vh;
  margin: 0;
  display: flex;
  flex-wrap: wrap;
  background-color: var(--base-0102);
  color: var(--base-06);
  overflow: hidden;
}

body.mobile-layout {
  overflow-y: auto;
}

body > * {
  padding: 20px;
}

@media (max-width: 1400px) {
  body > * {
    padding: 15px;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 1em;
  margin-bottom: 0.5em;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-size: 1.5rem;
}

h3 {
  font-size: 1.25rem;
}

p,
ul {
  margin-top: 0;
  margin-bottom: 0.7em;
}

ul ul {
  margin-bottom: 0;
}

a {
  color: var(--base-0d);
}

a:visited {
  color: var(--base-0e);
}

img {
  max-width: 100%;
}

/* COMPONENT STYLING */

/* Dropdown component. */

select {
  -webkit-appearance: none;
  appearance: none;
  font: inherit;
  color: inherit;
  background-color: var(--base-00);
  /* Icon source: https://fontawesome.com/icons/chevron-down?style=solid. */
  /* base06 */
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="%23e0e0e0" d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"></path></svg>');
  background-repeat: no-repeat;
  background-position: right 0.4em top 50%;
  background-size: auto 50%;
  border: 0;
  border-radius: var(--radius);
  padding: 0.15em 1.5em 0.3em 0.4em;
  text-overflow: ellipsis;
  transition: all var(--transition-time);
}

select:active,
select:hover {
  box-shadow: var(--shadow);
}

select:hover {
  background-color: var(--base-0203);
}

select:focus {
  outline: none;
}

/* Checkbox component. */

.checkbox {
  display: flex;
  column-gap: 0.25em;
  justify-items: left;
  align-items: center;
}

.checkbox input {
  -webkit-appearance: none;
  appearance: none;
  font: inherit; /* Fix sizing on iOS. */
  width: 1.2em;
  height: 1.2em;
  padding: 0;
  margin: 0.25em;
  flex: 0 0 auto;
  background-color: var(--base-00);
  border: 0;
  border-radius: var(--radius);
  transition: background-color var(--transition-time),
    box-shadow var(--transition-time);
}

.checkbox input:hover {
  box-shadow: var(--shadow);
  background-color: var(--base-0203);
}

.checkbox input:focus {
  outline: none;
}

.checkbox input:checked {
  /* Icon source: https://fontawesome.com/icons/check?style=solid. */
  /* base06 */
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="%23e0e0e0" d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"></path></svg>');
  background-repeat: no-repeat;
  background-size: 75% auto;
  background-position: 50% 60%;
}

/* Tab bar component. */

.tab-bar {
  box-sizing: border-box;
  width: 100%;
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  padding: 0.25em;
  margin-bottom: 0.75em;
  background-color: var(--base-00);
  border-radius: calc(1.4 * var(--radius));
}

.tab-bar input {
  -webkit-appearance: none;
  appearance: none;
  width: unset;
  height: unset;
  padding: 0;
  margin: 0;
  flex: 1 0 auto;
  font-size: 1em;
  font-family: inherit;
  border: none;
  border-radius: var(--radius);
  transition: all var(--transition-time);
}

.tab-bar input::after {
  box-sizing: border-box;
  display: block;
  content: attr(label_text_);
  font-size: inherit;
  font-family: inherit;
  padding: 0.1em 0.5em 0.18em 0.5em;
  width: 100%;
  text-align: center;
  color: var(--base-06);
}

.tab-bar input:hover {
  background-color: var(--base-02);
}

.tab-bar input:active,
.tab-bar input:checked {
  background-color: var(--base-0203);
}

.tab-bar input:focus {
  outline: none;
}

/* Tooltips. */

.tooltip {
  position: relative;
  text-decoration: underline;
  -webkit-text-decoration-style: dotted;
  text-decoration-style: dotted;
  transition: text-decoration var(--transition-time);
  cursor: help;
}

.tooltip .description {
  box-sizing: border-box;
  --width: min(240px, 80vw);
  visibility: hidden;
  opacity: 0;
  font-size: 0.85rem;
  text-align: center;
  position: absolute;
  bottom: 100%;
  left: 50%;
  width: var(--width);
  margin-left: calc(-0.5 * var(--width));
  padding: 0.3em 0.8em;
  border-radius: var(--radius);
  background-color: var(--base-0203);
  box-shadow: 0 0.25rem 1.5rem 0.25rem var(--base-00);
  transition: visibility var(--transition-time),
    opacity var(--transition-time) 0.5s;
}

.tooltip:hover .description:not(:hover) {
  visibility: visible;
  opacity: 1;
}

/* Popup windows. */

.window-button {
  -webkit-appearance: none;
  appearance: none;
  --size: 1.8rem;
  width: var(--size);
  height: var(--size);
  border-radius: calc(var(--size) / 2);
  border: none;
  background-color: var(--base-00);
  margin: 0;
  padding: 0;
  font: inherit;
  color: inherit;
  font-size: calc(var(--size) * 0.7);
  transition: var(--transition-time);
  display: flex;
  align-items: center;
  justify-content: center;
}

.window-button:hover {
  background-color: var(--base-02);
  box-shadow: var(--shadow);
}

.window-button:active {
  background-color: var(--base-0203);
}

.window-bg {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  background-color: var(--base-00-semitransparent);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: visibility var(--transition-time), opacity var(--transition-time);
}

.window-bg[window_vis_="hidden"] {
  visibility: hidden;
  opacity: 0;
}

.window-bg[window_vis="visible"] {
  visibility: visible;
  opacity: 1;
}

.window-container {
  box-sizing: border-box;
  position: relative;
  --width: min(90%, 55em);
  --height: 85%;
  width: var(--width);
  min-height: min(var(--height), 350px);
  max-height: var(--height);
  display: flex;
  flex-direction: column;
  padding: 0 3rem 3rem 3rem;
  background-color: var(--base-0102);
  border-radius: calc(var(--radius) * 4);
  box-shadow: 5px 15px 40px 20px var(--base-00);
}

.window-header {
  flex-shrink: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-right: -1em;
}

@media (max-width: 800px) {
  .window-container {
    padding: 0 2rem 2rem 2rem;
  }

  .window-header {
    margin-right: 0;
  }
}

.window-close-button {
  /* Icon source: https://thenounproject.com/term/close/1609004/. */
  /* base06 */
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="%23e0e0e0" d="M61.2,50.5l32.1,32.1c3,3,3,7.7,0,10.7c-3,3-7.7,3-10.7,0L50.5,61.2L18.4,93.3c-3,3-7.7,3-10.7,0c-3-3-3-7.7,0-10.7l32.1-32.1L7.7,18.4c-3-3-3-7.7,0-10.7s7.7-3,10.7,0l32.1,32.1L82.6,7.7c3-3,7.7-3,10.7,0c3,3,3,7.7,0,10.7L61.2,50.5z"/></svg>');
  background-repeat: no-repeat;
  background-size: 45% auto;
  background-position: center;
}

.window-content {
  width: 100%;
  overflow-y: auto;
}

/*
This class is added and removed dynamically (see `components/window.rs`).
Disable scroll in the body if there is a window overlaid.
Note that disabling scroll is *intentionally* not implemented on iOS (WTF Apple!!) if the address
bar is collapsed; see https://bugs.webkit.org/show_bug.cgi?id=153852#c34.
*/
body.window-open {
  overflow: hidden;
}

/* UI STYLING */

/* Pointillist display. */

main {
  box-sizing: border-box;
  height: 100%;
  flex: 2 1 50vh;
}

.mobile-layout main {
  height: min(120vw, 60vh);
}

.visualization#pointillist {
  width: 100%;
  height: 100%;
}

/* Sidebar. */

#sidebar {
  box-sizing: border-box;
  max-height: 100%;
  flex: 1 1 20rem;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  overflow-x: hidden;
  overflow-y: auto;
}

/* This class is added and removed dynamically (see `lib.rs`). */
.mobile-layout #sidebar {
  overflow-y: unset;
  max-height: unset;
}

#title-and-help-btn {
  display: flex;
  justify-content: space-between;
}

#title-and-help-btn > h1 {
  margin-top: 0.2em;
}

#controls {
  user-select: none;
}

#controls table {
  border-spacing: 0;
  margin: auto;
}

#controls tr:first-child td {
  padding-top: 0;
}

#controls tr:last-child td {
  padding-bottom: 0;
}

#controls td {
  padding-top: 0.25em;
  padding-bottom: 0.25em;
}

#controls td:not(:first-child) {
  padding-left: 0.5em;
}

#controls td:first-child {
  text-align: right;
  width: 50%;
}

#controls td:last-child {
  text-align: left;
  width: 50%;
}

#controls select {
  width: 100%;
}

#controls input {
  margin-top: 0;
  margin-bottom: 0;
}

.visualization#supplemental {
  padding: 10px;
  flex: 1 0 350px;
}

footer {
  margin-top: 40px;
  display: flex;
  justify-content: flex-end;
  flex-wrap: wrap;
  flex-shrink: 0;
  font-size: 0.8rem;
}

footer > *:not(:first-child)::before {
  content: "|";
  margin-left: 0.4em;
  margin-right: 0.4em;
}

/* Help panel. */

#title-and-help-btn .raw > :first-child {
  margin-top: 0;
}
